{"version":3,"file":"static/js/566.bce22adc.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selector.js","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/ContactsList/ContactListItem/contact-list-item.module.css?8d97","modules/Contacts/ContactsList/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/ContactsList/contacts-list.module.css?57ee","modules/Contacts/ContactsList/ContactsList.jsx","modules/Contacts/ContactForm/initialState.js","modules/Contacts/ContactForm/fields.js","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/ContactForm/contactForm.module.css?5b39","modules/Contacts/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/Filter/filter.module.css?3b52","modules/Contacts/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/contacts.module.css?23f1","modules/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/Button/button.module.css?dd0a","shared/components/Button/Button.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/textField.module.css?9fa7","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getContacts = (store) => {\n  return store.contacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"contact-list-item_text__qEJXr\"};","import { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./contact-list-item.module.css\";\nimport Button from \"../../../../shared/components/Button\";\n\nfunction ContactListItem(props) {\n  const { number, name, onClick, id } = props;\n\n  return (\n    <tr>\n      <td className={s.text}>{name}</td>\n      <td className={s.text}>{number}</td>\n      <td>\n      <Button\n        className={s.text}\n        text=\"Detele\"\n        type=\"button\"\n        onClick={(e) => {\n          onClick(id);\n        }}\n      />\n      </td>\n    </tr>\n  );\n}\nContactListItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default memo(ContactListItem);","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts-list_list__S29NL\"};","import PropTypes from \"prop-types\";\n\nimport ContactListItem from \"./ContactListItem\";\nimport s from \"./contacts-list.module.css\";\n\nfunction ContactsList({ items, onClick }) {\n  const elements = items.map((el) => {\n    const { number, name, id } = el;\n    return (\n      <ContactListItem\n        key={id}\n        id={id}\n        onClick={onClick}\n        number={number}\n        name={name}\n      />\n    );\n  });\n\n  return (\n    <table className={s.list}>\n      <tbody>{elements}</tbody>\n    </table>\n  )\n};\n\nContactsList.defaultProps = {\n  items: [],\n};\n\nContactsList.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactsList;","export const initialState = { name: \"\", number: \"\" };\n","export const fields = {\n  name: {\n    label: 'Name:',\n    type: 'text',\n    name: 'name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    required: true,\n    placeholder: 'enter name',\n  },\n  number: {\n    label: 'Number:',\n    type: 'tel',\n    name: 'number',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    required: true,\n    placeholder: 'enter number',\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__9rEbh\"};","import { memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TextField from \"../../../shared/components/TextField\";\nimport Button from \"../../../shared/components/Button\";\n\nimport useForm from \"../../../shared/hooks/useForm\";\n\nimport { initialState } from \"./initialState\";\nimport { fields } from \"./fields\";\n\nimport s from \"./contactForm.module.css\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit,\n    initialState,\n    isReset: true,\n  });\n  const { name, number } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <TextField value={name} onChange={handleChange} {...fields.name} />\n      <TextField value={number} onChange={handleChange} {...fields.number} />\n      <Button text=\"Add contact\" />\n    </form>\n  );\n};\n\nContactForm.defaultProps = {\n  onSubmit: () => {},\n};\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default memo(ContactForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__BbbpC\",\"input\":\"filter_input__rySjk\"};","import { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./filter.module.css\";\nconst Filter = ({ onChange }) => {\n  return (\n    <label className={s.label}>\n      <input\n        onChange={onChange}\n        className={s.input}\n        placeholder=\"find contact\"\n        type=\"text\"\n        name=\"filter\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default memo(Filter);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"contacts_content__1x6qP\",\"form\":\"contacts_form__xkZhG\"};","import { useSelector } from \"react-redux\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { fetchContacts, removeContact, addContact } from \"../../redux/contacts/contacts-operation\";\nimport { getContacts } from \"../../redux/contacts/contacts-selector\";\nimport { useDispatch } from \"react-redux\";\n\nimport ContactsList from \"./ContactsList\";\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./Filter\";\n\nimport s from \"./contacts.module.css\";\n\nconst Contacts = () => {\n  const [filter, setFilter] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const contactsStore = useSelector(getContacts);\n  const { items, error, loading } = contactsStore;\n  const filteredItems = () => {\n    if (!filter) {\n      return items;\n    }\n    const newItems = items.filter((e) => {\n      const { name } = e;\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n    return newItems;\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = useCallback(\n    (data) => dispatch(addContact(data)),\n    [dispatch]\n  );\n  const onRemoveContact = useCallback(\n    (id) => {\n      dispatch(removeContact(id));\n    },\n    [dispatch]\n  );\n\n  const changeFilter = useCallback(\n    ({ target: { value } }) => setFilter(value.trim()),\n    [setFilter]\n  );\n\n  return (\n    <div className=\"container\">\n      <div className={s.content}>\n        <div className={s.form}>\n          <h1 className=\"title\">Add contact here:</h1>\n          <ContactForm onSubmit={onAddContact} />\n        </div>\n\n        <div className={s.list}>\n          <h2 className=\"title\">Contacts List:</h2>\n          <Filter onChange={changeFilter} />\n          {loading && <p>Loading...</p>}\n          {error && <p>{`Error: ${error}`}</p>}\n          {items.length > 0 && !error && !loading && (\n            <ContactsList items={filteredItems()} onClick={onRemoveContact} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import Contacts from \"../../modules/Contacts\";\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Contacts />\n    </>\n  );\n};\nexport default ContactsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__aZIRC\"};","import PropTypes from \"prop-types\";\nimport s from \"./button.module.css\";\n\nconst Button = (props) => {\n  const { type, text, onClick } = props;\n  return (\n    <button className={s.btn} onClick={onClick} type={type}>\n      {text}\n    </button>\n  );\n};\nButton.defaultProps = {\n  type: \"submit\",\n  onClick: () => {},\n};\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"textField_container__Qe9Fk\",\"label\":\"textField_label__sEkJy\",\"input\":\"textField_input__0wJ6p\"};","import { nanoid } from \"@reduxjs/toolkit\";\nimport { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./textField.module.css\";\n\nconst TextField = (props) => {\n  const {\n    label,\n    name,\n    value,\n    onChange,\n    placeholder,\n    required,\n    type,\n    pattern,\n    title,\n  } = props;\n\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={s.container}>\n      <label htmlFor={id} className={s.label}>\n        {label}\n      </label>\n      <input\n        onChange={onChange}\n        id={id}\n        className={s.input}\n        type={type}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        required={required}\n        pattern={pattern}\n        title={title}\n      />\n    </div>\n  );\n};\nTextField.defaultProps = {\n  type: \"text\",\n  required: false,\n  onChange: () => {},\n};\n\nTextField.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  required: PropTypes.bool.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n  ]).isRequired,\n  placeholder: PropTypes.string,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default TextField;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst useForm = ({ onSubmit, initialState, isReset }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === \"checkbox\" ? checked : value;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    if (isReset) {\n      setState({ ...initialState });\n    }\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nuseForm.defaultProps = {\n  onSubmit: () => {},\n  initialState: {},\n  isReset: true,\n};\n\nuseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialState: PropTypes.shape.isRequired,\n  isReset: PropTypes.bool.isRequired,\n};\n\nexport default useForm;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getContacts","store","contacts","ContactListItem","props","number","name","onClick","id","className","s","Button","text","type","e","memo","ContactsList","items","elements","map","el","defaultProps","initialState","fields","label","pattern","title","required","placeholder","ContactForm","onSubmit","useForm","isReset","state","handleChange","handleSubmit","TextField","value","onChange","Filter","useState","filter","setFilter","dispatch","useDispatch","contactsStore","useSelector","error","loading","useEffect","fetchContacts","onAddContact","useCallback","data","addContact","onRemoveContact","removeContact","changeFilter","target","trim","length","toLowerCase","includes","useMemo","nanoid","htmlFor","setState","checked","newValue","prevState","preventDefault","propTypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}